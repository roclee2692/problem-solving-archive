#include<bits/stdc++.h>
using namespace std;
int ans;
int md[13]={0,31,28,31,30,31,30,31,31,30,31,30,31};
int main(){
	for(int i=1;i<13;i++){
		for(int j=1;j<=md[i];j++){
			//仔细检查字母有误写错，这里i可能错敲成1 l ,m和n 也容易敲错 
			int a[4]={i/10,i%10,j/10,j%10};//2022年中的每一天 
	//计数的不能声明在要运用的循环中，不能全局自动初始化，这里每次循环都要清零重置 
			for(int i=0;i<=4-3;i++){//k是滑动窗口的范围    // 外层：控制窗口起点（只滑两次）
				int cnt = 0; // 每次窗口重新初始化  必须写在每次窗口循环的内层
	// cnt 累加变量必须在滑动窗口内重置，避免旧值影响下一窗口，造成逻辑碰巧正确但不严谨 
				for(int j=1;j<3;j++){// 内层：判断连续递增
					if((a[i]+j)==a[i+j]){//或者a[i + j] == a[i + j - 1] + 1 
		// 滑动窗口内判断顺子必须用 a[i+j] 表示相对位置，否则会误用固定数组位置导致漏判或误判
						cnt++;
		// 当顺子长度变长时，使用计数变量遍历窗口比硬编码更稳健，便于扩展成任意长度顺子判断
						
					}else break;
				}
				
				if(cnt==2){
	// 判断出顺子后应立即跳出滑动窗口循环，break 必须在外层，防止重复计数下一窗口
							ans++; // 跳出整个滑动窗口循环，防止重复计数  我们是要跳出最外层的 
							break;// 避免重复计数 如 0123 会算两次 这里只让他滑动一次 
						};
			}
	// 判断连续三位数字是否成顺子，不能用分散配对计数，必须明确判断连续三位整体相连	 
		}
	}
	cout<<ans<<endl;
	return 0;
}


// long double 格式化输出必须使用 %nLf（大写L），小写l将被当作 double 处理，可能丢精度 n表示保留几位精度
//或者cout<<fixed<<setprecision(n)<<  pi <<endl;
