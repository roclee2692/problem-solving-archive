// ============================================================
// 可视化追踪：样例 1 - "bbbab"
// ============================================================

原始串：s = "bbbab"
字符：    b   b   b   a   b
位置：    0   1   2   3   4
编码：   -1  -1  -1  +1  -1

前缀和数组 p：
  p[0] = 0        (开始前)
  p[1] = 0-1 = -1 (b)
  p[2] = -1-1 = -2 (bb)
  p[3] = -2-1 = -3 (bbb)
  p[4] = -3+1 = -2 (bbba)
  p[5] = -2-1 = -3 (bbbab)

总差值 D = p[5] = -3

需要找的子串差值 = D = -3

main loop:
==================================
r=1: p[r]=p[1]=-1
     target = p[1] - D = -1 - (-3) = 2
     last[2] 不存在？ NO
     last[-1] = 1

r=2: p[r]=p[2]=-2
     target = p[2] - D = -2 - (-3) = 1
     last[1] 不存在？ NO
     last[-2] = 2

r=3: p[r]=p[3]=-3
     target = p[3] - D = -3 - (-3) = 0
     last[0] 存在！值=0
     l = 0, len = r - l = 3 - 0 = 3
     ans = min(n+1, 3) = 3
     last[-3] = 3

r=4: p[r]=p[4]=-2
     target = p[4] - D = -2 - (-3) = 1
     last[1] 不存在？ NO
     last[-2] = 4

r=5: p[r]=p[5]=-3
     target = p[5] - D = -3 - (-3) = 0
     last[0] 存在！值=0
     l = 0, len = r - l = 5 - 0 = 5
     ans = min(3, 5) = 3
     last[-3] = 5

最终 ans = 3 < n=5，输出 3 ✓

验证：删除子串 [1, 3]（即"bbb"）
      剩余 = "ab"
      剩余串差值 = 1 - 1 = 0 ✓

==================================
// ============================================================
// 可视化追踪：样例 5 - "aabaa"
// ============================================================

原始串：s = "aabaa"
字符：    a   a   b   a   a
位置：    0   1   2   3   4
编码：   +1  +1  -1  +1  +1

前缀和数组 p：
  p[0] = 0
  p[1] = 0+1 = 1
  p[2] = 1+1 = 2
  p[3] = 2-1 = 1
  p[4] = 1+1 = 2
  p[5] = 2+1 = 3

总差值 D = p[5] = 3

需要找的子串差值 = D = 3

main loop:
==================================
r=1: p[r]=1, target=1-3=-2, last[-2]不存在, last[1]=1
r=2: p[r]=2, target=2-3=-1, last[-1]不存在, last[2]=2
r=3: p[r]=1, target=1-3=-2, last[-2]不存在, last[1]=3(覆盖)
r=4: p[r]=2, target=2-3=-1, last[-1]不存在, last[2]=4(覆盖)
r=5: p[r]=3, target=3-3=0, last[0]存在！值=0
     l=0, len=5-0=5
     ans=min(n+1, 5)=5
     last[3]=5

最终 ans = 5 >= n=5，输出 -1 ✓

验证：唯一的"和相等"方案就是删全部
      剩余 = ""（空串）
      因为必须删全部，输出 -1

==================================
